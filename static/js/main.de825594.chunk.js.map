{"version":3,"sources":["Arraylist.js","RealTimeChart.js","App.js","reportWebVitals.js","index.js"],"names":["ArrayList","Stocks","myarray","this","map","data","title","React","Component","RealTimeChart","props","el","createRef","state","chart","stockChart","Charting","CandlestickChart","current","theme","titleFontSize","candlestickWidth","showLegend","showXCoordinates","xAxisLabelRotationAngle","xAxis","minValue","interval","maxValue","yAxis","gridType","Horizontal","gridColor1","Color","gridColor2","gridLineColor","gridLineStyle","DashStyle","Dash","plot","seriesStyle","Brush","Solid","seriesRenderers","item","axisLabelsBrush","axisTitleBrush","axisStroke","highlightStroke","dataList","List","intervalId","setInterval","updateStock","bind","setState","$","getJSON","json","times","update","time","series","count","stock_info","dataItem","Date","add","removeAt","insert","dateTimeFormat","ShortTime","ObservableCollection","draw","width","height","ref","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de825594.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Arraylist.css';\r\n\r\nclass ArrayList extends React.Component\r\n{\r\n    Stocks={\r\n        myarray:[\"AAPL\",\"MSFT\",\"BAC\",\"AMD\",\"TCS\",\"NS\"]\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                <select>\r\n                    {this.Stocks.myarray.map(data=>(\r\n                        <option title={data}>{data}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default ArrayList;","import React, { Component } from 'react';\r\nimport $ from 'jquery'\r\nimport * as Charting from 'chart-library';\r\n\r\nexport class RealTimeChart extends Component {\r\n\r\nconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.el = React.createRef();\r\n\r\n\t\tthis.state = {\r\n\t\t\tchart: null\r\n\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tvar stockChart = new Charting.Controls.CandlestickChart(this.el.current);\r\n\t\t\r\n\t\tstockChart.title = \"Airtel\";\r\n\t\tstockChart.theme.titleFontSize = 16;\r\n\t\tstockChart.candlestickWidth = 12;\r\n\t\tstockChart.showLegend = false;\r\n\t\t\r\n\t\tstockChart.showXCoordinates = false;\r\n\t\tstockChart.xAxisLabelRotationAngle = 30;\r\n\r\n\t\tstockChart.xAxis.minValue = 0;\r\n\t\tstockChart.xAxis.interval = 1;\r\n\t\tstockChart.xAxis.maxValue = 40;\r\n\t\tstockChart.xAxis.title = \"Time\";\r\n\t\tstockChart.yAxis.title = \"Price\";\r\n\t\t\r\n\t\tstockChart.gridType = Charting.GridType.Horizontal;\r\n\t\tstockChart.theme.gridColor1 = new Charting.Drawing.Color(\"#ffffff\");\r\n\t\tstockChart.theme.gridColor2 = new Charting.Drawing.Color(\"#fafafa\");\r\n\t\tstockChart.theme.gridLineColor = new Charting.Drawing.Color(\"#cecece\");\r\n\t\tstockChart.theme.gridLineStyle = Charting.Drawing.DashStyle.Dash;\r\n\r\n\t\tstockChart.plot.seriesStyle = new Charting.CandlestickSeriesStyle(\r\n\t\t\tnew Charting.Drawing.Brush(\"#ff2f26\"),\r\n\t\t\tnew Charting.Drawing.Brush(\"#00b140\"),\r\n\t\t\tnew Charting.Drawing.Brush(\"#2e2e2a\"), 2,\r\n\t\t\tCharting.Drawing.DashStyle.Solid, stockChart.plot.seriesRenderers.item(0));\r\n\r\n\t\tstockChart.theme.axisLabelsBrush = stockChart.theme.axisTitleBrush = stockChart.theme.axisStroke =\r\n\t\t\tnew Charting.Drawing.Brush(\"#2e2e2e\");\r\n\t\tstockChart.theme.highlightStroke = new Charting.Drawing.Brush(\"#cecece\");\r\n\t\t\r\n\t\tvar dataList = new Charting.Collections.List();\r\n\r\n\t\tvar intervalId = setInterval(this.updateStock.bind(this), 60000);\r\n\t\tthis.setState({ chart: stockChart, data: dataList, intervalId: intervalId });\r\n\t\tthis.updateStock();\r\n\t}\r\n\t\r\n\tupdateStock() {\r\n\t\t$.getJSON(\"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=IBM&interval=1min&apikey=demo\", function (json) {\r\n\r\n\t\t\tvar times = json[\"Time Series (1min)\"];\t\t\t\r\n\r\n\t\t\tvar update = false;\r\n\r\n\t\t\tif (this.state.chart.series.count() > 0)\r\n\t\t\t\tupdate = true;\r\n\r\n\t\t\tfor (var time in times) {\r\n\t\t\t\tvar stock_info = times[time];\r\n\r\n\t\t\t\tvar dataItem = new Charting.StockPrice(stock_info[\"1. open\"], stock_info[\"4. close\"], stock_info[\"3. low\"],\r\n\t\t\t\t\tstock_info[\"2. high\"], new Date(time));\r\n\r\n\t\t\t\tif (!update)\r\n\t\t\t\t\tthis.state.data.insert(0, dataItem);\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.data.add(dataItem);\t\t\t\t\r\n\t\t\t\t\tthis.state.data.removeAt(0);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar series = new Charting.StockPriceSeries(this.state.data);\r\n\t\t\tseries.dateTimeFormat = Charting.DateTimeFormat.ShortTime;\r\n\r\n\t\t\tvar data = new Charting.Collections.ObservableCollection();\r\n\t\t\tdata.add(series);\r\n\t\t\tthis.state.chart.series = data;\r\n\t\t\tthis.state.chart.draw();\r\n\t\t}.bind(this));\r\n\t}\r\n\t\r\nrender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<canvas width=\"1350px\" height=\"600px\" ref={this.el}></canvas>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n}","\nimport './App.css';\nimport \"./Arraylist\";\n\n             \nimport { RealTimeChart } from './RealTimeChart';\nimport ArrayList from './Arraylist';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <ArrayList/>\n    <RealTimeChart />\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}